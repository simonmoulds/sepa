% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/sepa_station_list.R
\name{sepa_station_list}
\alias{sepa_station_list}
\title{Get station metadata}
\usage{
sepa_station_list(
  station_search_term,
  bounding_box,
  group_id,
  return_fields,
  ...
)
}
\arguments{
\item{station_search_term}{Character. A string pattern to search
station names. This argument supports wildcard matching using
the asterisk (*) symbol. The search is case insensitive.}

\item{bounding_box}{Numeric. A bounding box within which
to search for stations. This argument should be a vector
with exactly four values formatted as follows:
(\code{min_x}, \code{min_y}, \code{max_x}, \code{max_y}).}

\item{group_id}{Character or numeric. A station group id. See
\code{\link[=sepa_group_list]{sepa_group_list()}}.}

\item{return_fields}{Character. A vector of return fields. In
most cases the default return fields will suffice. See the
online documentation for \href{https://timeseries.sepa.org.uk/KiWIS/KiWIS?datasource=0&service=kisters&type=queryServices&request=getrequestinfo}{getStationList}
API request for a complete list of fields.}

\item{...}{Additional arguments. None implemented.}
}
\value{
A tibble.
}
\description{
Returns metadata about measurement stations in the SEPA network.
}
\examples{
\dontrun{
# Filter by name
stns <- sepa_station_list(station_search_term="Auch*")

# Filter by region
stns <- sepa_station_list(bounding_box = c(-2, 48, 2, 60))

# Filter by group
q_grp <- grps |>
  dplyr::filter(group_name \%in\% "StationsWithFlow") |>
  dplyr::pull(group_id)
stns <- sepa_station_list(group_id = q_grp)
}
}
