% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/sepa_timeseries_list.R
\name{sepa_timeseries_list}
\alias{sepa_timeseries_list}
\title{Get list of available time series for one or more stations}
\usage{
sepa_timeseries_list(
  station_id,
  ts_name,
  coverage = TRUE,
  group_id,
  return_fields,
  ...
)
}
\arguments{
\item{station_id}{Character or numeric. Either a single station ID or a
vector of station IDs.}

\item{ts_name}{Character. A time series short name to search for.  This
argument supports wildcard matching using the asterisk (*) symbol.}

\item{coverage}{Logical. Whether or not to return the start and end dates
of the time series. Default is TRUE, but setting to FALSE will result
in faster queries.}

\item{group_id}{Character or numeric. A station group id. See
\code{\link[=sepa_group_list]{sepa_group_list()}}.}

\item{return_fields}{Character. A vector of return fields. In
most cases the default return fields will suffice. See details.}

\item{...}{Additional arguments. None implemented.}
}
\value{
A tibble.
}
\description{
Get list of available time series for one or more stations
}
\details{
This function allows you to retrieve timeseries IDs given \code{station_id},
\code{ts_name} or \code{group_id}. Note that while the first two parameters can be
used in tandem, e.g. to search for a timeseries at a particular station,
\code{group_id} must be used on its own.
}
\section{Return fields}{


The argument \code{return_fields} allows you to specify the return fields.
The default return fields are as follows:
\itemize{
\item \code{station_name}
\item \code{station_id}
\item \code{stationparameter_name}
\item \code{ts_id}
\item \code{ts_name}
}

There are too many options to document here. Instead, take a look at
the online documentation for \href{https://timeseries.sepa.org.uk/KiWIS/KiWIS?datasource=0&service=kisters&type=queryServices&request=getrequestinfo}{getTimeseriesList}
to see the possible values that can be supplied to the API parameter
\strong{returnfields}.
}

\examples{
 
\dontrun{
# Get all discharge timeseries
q_grp <- sepa_group_list() |> 
  filter(group_name == "StationsWithFlow") |> 
  pull(group_id)
ts_list <- sepa_timeseries_list(group_id = q_grp)
# Search for all stations with 15 minute intervals
ts_list <- sepa_timeseries_list(ts_name="15min*")
# We can filter the resulting tibble to retrieve all 
# discharge stations with 15 minute instantaneous values: 
ts_list <- ts_list |> filter(stationparameter_name == "Flow")
} 
}
