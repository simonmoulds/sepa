[{"path":"https://simonmoulds.github.io/sepa/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Simon Moulds. Author, maintainer.","code":""},{"path":"https://simonmoulds.github.io/sepa/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Moulds S (2024). sepa: Hydrological data SEPA. R package version 0.0.0.9000, https://simonmoulds.github.io/sepa/, https://github.com/simonmoulds/sepa.","code":"@Manual{,   title = {sepa: Hydrological data from SEPA},   author = {Simon Moulds},   year = {2024},   note = {R package version 0.0.0.9000, https://simonmoulds.github.io/sepa/},   url = {https://github.com/simonmoulds/sepa}, }"},{"path":"https://simonmoulds.github.io/sepa/index.html","id":"sepa","dir":"","previous_headings":"","what":"Hydrological data from SEPA","title":"Hydrological data from SEPA","text":"sepa package provides access environmental data collected Scottish Environment Protection Agency (SEPA).","code":""},{"path":"https://simonmoulds.github.io/sepa/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Hydrological data from SEPA","text":"can install development version sepa GitHub :","code":"devtools::install_github(\"simonmoulds/sepa\") #> Skipping install of 'sepa' from a github remote, the SHA1 (2ef40daf) has not changed since last install. #>   Use `force = TRUE` to force installation"},{"path":"https://simonmoulds.github.io/sepa/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Hydrological data from SEPA","text":"basic example shows solve common problem: steps required download historical streamflow data outlined : obtained data can plot timeseries:","code":"library(dplyr) #>  #> Attaching package: 'dplyr' #> The following objects are masked from 'package:stats': #>  #>     filter, lag #> The following objects are masked from 'package:base': #>  #>     intersect, setdiff, setequal, union library(lubridate) #>  #> Attaching package: 'lubridate' #> The following objects are masked from 'package:base': #>  #>     date, intersect, setdiff, union library(ggplot2) library(sepa) grps <- sepa_group_list() q_grp <- grps |> filter(group_name %in% \"StationsWithFlow\") |> pull(group_id) # List stations that measure flow stns <- sepa_station_list(group_id = q_grp) # Choose arbitrary station stn_id <- stns$station_id[1] available_ts <- sepa_timeseries_list(stn_id) # Get the timeseries ID for daily mean flow ts_id <- available_ts |>    filter(stationparameter_name == \"Flow\" & ts_name == \"Day.Mean\") |>    pull(ts_id) # Retrieve data ts <- sepa_timeseries_values(ts_id, start_date = Sys.Date() %m-% months(1), end_date = Sys.Date()) head(ts) #> # A tibble: 6 × 8 #>   Timestamp           Value ts_name  ts_id    Units stationparameter_name #>   <dttm>              <dbl> <chr>    <chr>    <chr> <chr>                 #> 1 2024-05-25 09:00:00 0.703 Day.Mean 62065010 m³/s  Flow                  #> 2 2024-05-26 09:00:00 2.92  Day.Mean 62065010 m³/s  Flow                  #> 3 2024-05-27 09:00:00 1.81  Day.Mean 62065010 m³/s  Flow                  #> 4 2024-05-28 09:00:00 1.53  Day.Mean 62065010 m³/s  Flow                  #> 5 2024-05-29 09:00:00 2.47  Day.Mean 62065010 m³/s  Flow                  #> 6 2024-05-30 09:00:00 1.56  Day.Mean 62065010 m³/s  Flow                  #> # ℹ 2 more variables: station_name <chr>, station_id <chr>"},{"path":"https://simonmoulds.github.io/sepa/reference/sepa-package.html","id":null,"dir":"Reference","previous_headings":"","what":"sepa: Retrieve data from the Scottish Environmental Protection Agency — sepa-package","title":"sepa: Retrieve data from the Scottish Environmental Protection Agency — sepa-package","text":"Functions discover download data Scottish Environmental Protection Agency (SEPA) API.","code":""},{"path":[]},{"path":"https://simonmoulds.github.io/sepa/reference/sepa-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"sepa: Retrieve data from the Scottish Environmental Protection Agency — sepa-package","text":"Maintainer: Simon Moulds sim.moulds@gmail.com (ORCID)","code":""},{"path":"https://simonmoulds.github.io/sepa/reference/sepa-package.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"sepa: Retrieve data from the Scottish Environmental Protection Agency — sepa-package","text":"","code":"if (FALSE) { # \\dontrun{ print(\"Hello, world\") } # }"},{"path":"https://simonmoulds.github.io/sepa/reference/sepa_group_list.html","id":null,"dir":"Reference","previous_headings":"","what":"Get available groups — sepa_group_list","title":"Get available groups — sepa_group_list","text":"Returns information available measurement stations groups. Group names include \"StationsWithFlow\", \"StationsWithRainfall\", amongst others. Group IDs can used filter queries sepa_station_list().","code":""},{"path":"https://simonmoulds.github.io/sepa/reference/sepa_group_list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get available groups — sepa_group_list","text":"","code":"sepa_group_list()"},{"path":"https://simonmoulds.github.io/sepa/reference/sepa_group_list.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get available groups — sepa_group_list","text":"tibble.","code":""},{"path":"https://simonmoulds.github.io/sepa/reference/sepa_group_list.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get available groups — sepa_group_list","text":"","code":"if (FALSE) { # \\dontrun{ grps <- sepa_group_list() } # }"},{"path":"https://simonmoulds.github.io/sepa/reference/sepa_station_list.html","id":null,"dir":"Reference","previous_headings":"","what":"Get station metadata — sepa_station_list","title":"Get station metadata — sepa_station_list","text":"Returns metadata measurement stations SEPA network.","code":""},{"path":"https://simonmoulds.github.io/sepa/reference/sepa_station_list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get station metadata — sepa_station_list","text":"","code":"sepa_station_list(   station_search_term,   bounding_box,   group_id,   return_fields,   ... )"},{"path":"https://simonmoulds.github.io/sepa/reference/sepa_station_list.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get station metadata — sepa_station_list","text":"station_search_term Character. string pattern search station names. argument supports wildcard matching using asterisk (*) symbol. search case insensitive. bounding_box Numeric. bounding box within search stations. argument vector exactly four values formatted follows: (min_x, min_y, max_x, max_y). group_id Character numeric. station group id. See sepa_group_list(). return_fields Character. vector return fields. cases default return fields suffice. See details. ... Additional arguments. None implemented.","code":""},{"path":"https://simonmoulds.github.io/sepa/reference/sepa_station_list.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get station metadata — sepa_station_list","text":"tibble.","code":""},{"path":"https://simonmoulds.github.io/sepa/reference/sepa_station_list.html","id":"return-fields","dir":"Reference","previous_headings":"","what":"Return fields","title":"Get station metadata — sepa_station_list","text":"argument return_fields allows specify return fields. default return fields follows: station_name station_no station_id station_latitude station_longitude many options document . Instead, take look online documentation getStationList see possible values can supplied API parameter returnfields.","code":""},{"path":"https://simonmoulds.github.io/sepa/reference/sepa_station_list.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get station metadata — sepa_station_list","text":"","code":"if (FALSE) { # \\dontrun{ # Filter by name stns <- sepa_station_list(station_search_term=\"Auch*\")  # Filter by region stns <- sepa_station_list(bounding_box = c(-2, 48, 2, 60))  # Filter by group q_grp <- grps |>   dplyr::filter(group_name %in% \"StationsWithFlow\") |>   dplyr::pull(group_id) stns <- sepa_station_list(group_id = q_grp)  # Add some additional return fields  } # }"},{"path":"https://simonmoulds.github.io/sepa/reference/sepa_timeseries_list.html","id":null,"dir":"Reference","previous_headings":"","what":"Get list of available time series for one or more stations — sepa_timeseries_list","title":"Get list of available time series for one or more stations — sepa_timeseries_list","text":"Get list available time series one stations","code":""},{"path":"https://simonmoulds.github.io/sepa/reference/sepa_timeseries_list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get list of available time series for one or more stations — sepa_timeseries_list","text":"","code":"sepa_timeseries_list(   station_id,   ts_name,   coverage = TRUE,   group_id,   return_fields,   ... )"},{"path":"https://simonmoulds.github.io/sepa/reference/sepa_timeseries_list.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get list of available time series for one or more stations — sepa_timeseries_list","text":"station_id Character numeric. Either single station ID vector station IDs. ts_name Character. time series short name search .  argument supports wildcard matching using asterisk (*) symbol. coverage Logical. Whether return start end dates time series. Default TRUE, setting FALSE result faster queries. group_id Character numeric. station group id. See sepa_group_list(). return_fields Character. vector return fields. cases default return fields suffice. See details. ... Additional arguments. None implemented.","code":""},{"path":"https://simonmoulds.github.io/sepa/reference/sepa_timeseries_list.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get list of available time series for one or more stations — sepa_timeseries_list","text":"tibble.","code":""},{"path":"https://simonmoulds.github.io/sepa/reference/sepa_timeseries_values.html","id":null,"dir":"Reference","previous_headings":"","what":"Get time series data for one or more stations — sepa_timeseries_values","title":"Get time series data for one or more stations — sepa_timeseries_values","text":"Get time series data one stations","code":""},{"path":"https://simonmoulds.github.io/sepa/reference/sepa_timeseries_values.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get time series data for one or more stations — sepa_timeseries_values","text":"","code":"sepa_timeseries_values(ts_id, start_date, end_date, return_fields, ...)"},{"path":"https://simonmoulds.github.io/sepa/reference/sepa_timeseries_values.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get time series data for one or more stations — sepa_timeseries_values","text":"ts_id Character numeric. Either single station ID vector station IDs. Time series IDs can found using sepa_timeseries_list() function. start_date Date character formatted \"YYYY-MM-DD\". Defaults yesterday. end_date Date character formatted \"YYYY-MM-DD\". Defaults today. return_fields Character. vector return fields. cases default return fields suffice. See details. ... Additional arguments. None implemented.","code":""},{"path":"https://simonmoulds.github.io/sepa/reference/sepa_timeseries_values.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get time series data for one or more stations — sepa_timeseries_values","text":"tibble.","code":""}]
